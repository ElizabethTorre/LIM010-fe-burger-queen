{"version":3,"sources":["img/logoBurger.png","views/welcome.jsx","firebase.js","components/Products.jsx","components/AddOrder.jsx","components/Header.jsx","views/waiter.jsx","components/OrderStructure.jsx","components/GetOrders.jsx","views/chef.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","Welcome","className","src","logo","alt","id","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Products","addProductAtOrder","useState","arr","setProducts","type","setType","useEffect","firestore","collection","where","get","then","querySnapshot","array","forEach","doc","push","data","catch","error","console","log","onClick","data-testid","map","product","key","nombre","precio","url","React","AddOrder","products","cantidad","total","deleteRow","order","name","setName","mesa","setMesa","disableSubmitButton","length","placeholder","value","onChange","e","target","colSpan","min","max","defaultValue","p","aria-hidden","date","estado","add","addOrder","Date","disabled","Header","Waiter","selectProduct","setOrder","Fragment","found","find","undefined","newArr","disable","prodId","cant","arrNew","element","acum","newArray","filter","ele","OrderStructure","setOrderToReady","setOrderToDelivered","toUpperCase","toDate","getHours","getMinutes","duration","GetOrders","orders","setOrders","state","setState","orderBy","onSnapshot","docs","snapOrder","addZ","n","secs","mins","durationTime","update","Chef","Boolean","window","location","hostname","match","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dac8e49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoBurger.eda230cd.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/logoBurger.png';\r\nimport '../css/App.css';\r\n\r\nexport const Welcome = () => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <img src={logo} alt=\"imagen de product\" className=\"Burger-logo\" />\r\n      <button className=\"Button-mesero\" id=\"ingresar\">\r\n        <Link to=\"/waiter\"> Mesero </Link>\r\n      </button>\r\n      <button className=\"Button-mesero\" id=\"ing\">\r\n        <Link to=\"/chef\"> Jefe de Cocina </Link>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  // Your web app's Firebase configuration\r\n  apiKey: 'AIzaSyCRUjRxgsnGbdWJrpP7UVHFeS0JEzM2Jw0',\r\n  authDomain: 'burger-queen-6ff61.firebaseapp.com',\r\n  databaseURL: 'https://burger-queen-6ff61.firebaseio.com',\r\n  projectId: 'burger-queen-6ff61',\r\n  storageBucket: 'burger-queen-6ff61.appspot.com',\r\n  messagingSenderId: '494430091091',\r\n  appId: '1:494430091091:web:6b21175389312bf33713a6',\r\n  measurementId: 'G-0K0FDC86YR',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from '../firebase';\r\nimport '../css/App.css';\r\n\r\nexport const Products = ({ addProductAtOrder }) => {\r\n  const [arr, setProducts] = useState([]);\r\n  const [type, setType] = useState('desayuno');\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('products')\r\n      .where('tipo', '==', type)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const array = [];\r\n        querySnapshot.forEach((doc) => {\r\n          array.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setProducts(array);\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, [type]);\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <h1>LISTA DE PRODUCTOS</h1>\r\n      <div>\r\n        <button type=\"button\" className=\"buttonApp\" onClick={() => setType('desayuno')}>\r\n          {' '}\r\n          Desayuno\r\n          {' '}\r\n        </button>\r\n        <button type=\"button\" className=\"buttonApp\" onClick={() => setType('almuerzo_cena')}>\r\n          {' '}\r\n          Almuerzo y cena\r\n          {' '}\r\n        </button>\r\n      </div>\r\n      <div className=\"Scroll\"  data-testid='productList'>\r\n        {arr.map((product) => {\r\n          return (\r\n            <div  data-testid= \"child\" key={product.id} onClick={() => addProductAtOrder(product)}>\r\n              <p className=\"name\">{product.nombre}</p>\r\n              <p className=\"price\">\r\n                S/.\r\n                {product.precio}\r\n              </p>\r\n              <img src={product.url} alt=\"imagen de product\" className=\"Width-product \" />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst { useState } = React;\r\n\r\nexport const AddOrder = ({\r\n  products, cantidad, total, deleteRow, order,\r\n}) => {\r\n  const [name, setName] = useState('');\r\n  const [mesa, setMesa] = useState('');\r\n\r\n  const functionName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const functionMesa = (e) => {\r\n    setMesa(e.target.value);\r\n  };\r\n  const addOrder = (name, mesa, product, date, estado, total) => firebase\r\n    .firestore()\r\n    .collection('order')\r\n    .add({\r\n      name,\r\n      mesa,\r\n      product,\r\n      date,\r\n      estado,\r\n      total,\r\n    });\r\n\r\n  const validateOrder = () => {\r\n    return products.length > 0 && name.length > 0 && mesa.length > 0;\r\n  };\r\n\r\n  const disableSubmitButton = !validateOrder();\r\n\r\n  return (\r\n    <div className=\"Order\">\r\n      <h2>PEDIDO</h2>\r\n      {/* <p>{Date(Date.now()).toString()}</p> */}\r\n      <div>\r\n        <label>\r\n          Cliente:\r\n          {' '}\r\n          <input placeholder=\"Nombre\" value={name} onChange={functionName} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          N° Mesa:\r\n          {' '}\r\n          <input placeholder=\"N° de Mesa\" value={mesa} onChange={functionMesa} />\r\n        </label>\r\n      </div>\r\n      <table className=\"\">\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"5\">DETALLE DE PEDIDO</th>\r\n          </tr>\r\n          <tr>\r\n            <td>CANT.</td>\r\n            <td>DESCRIPCIÓN</td>\r\n            <td>PU</td>\r\n            <td>SUBTOTAL</td>\r\n            <td>BORRAR</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max=\"100\"\r\n                  defaultValue={product.cantidad}\r\n                  onClick={(e) => {\r\n                    const p = e.target.value;\r\n                    cantidad(product.id, p);\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>{product.nombre}</td>\r\n              <td>\r\n                S/.\r\n                {product.precio}\r\n              </td>\r\n              <td>\r\n                S/.\r\n                {product.precio * product.cantidad}\r\n              </td>\r\n              <td>\r\n                <i\r\n                  className=\"fa fa-minus-circle\"\r\n                  aria-hidden=\"true\"\r\n                  onClick={() => {\r\n                    deleteRow(product);\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n\r\n      </table>\r\n      <p className=\"Total\">\r\n        Total = S/.\r\n        {total()}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className=\"Send\"\r\n        onClick={() => {\r\n          if (!disableSubmitButton) {\r\n            addOrder(name, mesa, products, new Date(), 'pendiente', total())\r\n              .then(() => {\r\n                order([]);\r\n                setName('');\r\n                setMesa('');\r\n              });\r\n          }\r\n        }}\r\n        disabled={disableSubmitButton}\r\n      >\r\n        Enviar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/logoBurger.png';\r\nimport '../css/App.css';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header className=\"Flex-header\">\r\n      <Link to=\"/\"><img src={logo} alt=\"imagen de product\" className=\"Burger-log\" /></Link>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Products } from '../components/Products';\r\nimport { AddOrder } from '../components/AddOrder';\r\nimport { Header } from '../components/Header';\r\nimport '../css/App.css';\r\n\r\nexport const Waiter = () => {\r\n  const [selectProduct, setOrder] = useState([]);\r\n\r\n  const incrementar = (prodId, cant) => {\r\n    const arrNew = selectProduct.map((element) => {\r\n      if (prodId === element.id) {\r\n        return {\r\n          ...element,\r\n          cantidad: cant,\r\n        };\r\n      }\r\n      return element;\r\n    });\r\n    setOrder(arrNew);\r\n  };\r\n  const Total = () => {\r\n    let acum = 0;\r\n    selectProduct.map((p) => acum += p.precio * p.cantidad);\r\n    return acum;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      {/* <button className=\"btn-nav\">\r\n        <Link to=\"/chef\"> Estados de pedidos </Link>\r\n      </button> */}\r\n      {/* <main> */}\r\n        <main className=\"Flex\">\r\n        <button className=\"btn-nav\">\r\n        <Link to=\"/chef\"> Estados de pedidos </Link>\r\n      </button>\r\n          <Products\r\n            addProductAtOrder={(product) => {\r\n              const found = selectProduct.find((p) => {\r\n                return p.id === product.id;\r\n              });\r\n\r\n              if (found !== undefined) {\r\n                const newArr = selectProduct.map((p) => {\r\n                  if (found.id === p.id) {\r\n                    p.disable = true;\r\n                  }\r\n                  return p;\r\n                });\r\n                setOrder(newArr);\r\n              } else {\r\n                setOrder([...selectProduct, { ...product, cantidad: 1 }]);\r\n              }\r\n            }}\r\n          />\r\n          <AddOrder\r\n            order={setOrder}\r\n            products={selectProduct}\r\n            cantidad={incrementar}\r\n            total={Total}\r\n            deleteRow={(element) => {\r\n              const newArray = selectProduct.filter((ele) => {\r\n                return element.id !== ele.id;\r\n              });\r\n              setOrder(newArray);\r\n            }}\r\n          />\r\n        </main>\r\n      {/* </main> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport '../css/App.css';\r\n\r\nexport const OrderStructure = ({ arr, setOrderToReady, setOrderToDelivered }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {arr.map((product) => {\r\n        return (\r\n          <div className=\"Status\" key={product.id}>\r\n            <h2>{product.estado.toUpperCase()}</h2>\r\n            <p className=\"\">\r\n              <span>Cliente: </span>\r\n              {product.name}\r\n            </p>\r\n            <p className=\"\">\r\n              <span>N° de Mesa: </span>\r\n              {product.mesa}\r\n            </p>\r\n            <p className=\"\">\r\n              <span>Hora de Pedido: </span>\r\n              {product.date.toDate().getHours()}\r\n:\r\n              {product.date.toDate().getMinutes()}\r\n            </p>\r\n\r\n            {(product.estado === 'listo' || product.estado === 'entregado') && (\r\n            <p>\r\n              <span>Tiempo Transcurrido: </span>\r\n              {product.duration}\r\n            </p>\r\n            )}\r\n\r\n            <table className=\"\">\r\n              <thead>\r\n                <tr>\r\n                  <th colSpan=\"5\">DETALLE DE PEDIDO</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>CANT.</td>\r\n                  <td>DESCRIPCIÓN</td>\r\n                  <td>PU</td>\r\n                  <td>SUBTOTAL</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {product.product.map((p) => {\r\n                  return (\r\n                    <tr key={p.nombre}>\r\n                      <td>{p.cantidad}</td>\r\n                      <td>{p.nombre}</td>\r\n                      <td>{p.precio}</td>\r\n                      <td>{p.cantidad * p.precio}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <p className=\"tot\">\r\n              TOTAL = S/.\r\n              {product.total}\r\n            </p>\r\n            {product.estado === 'pendiente' && (\r\n              <button type=\"button\" onClick={() => setOrderToReady(product)}>\r\n                Marcar como pedido LISTO\r\n              </button>\r\n            )}\r\n            {product.estado === 'listo' && (\r\n              <button type=\"button\" onClick={() => setOrderToDelivered(product)}>\r\n                Marcar como pedido ENTREGADO\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { OrderStructure } from './OrderStructure';\r\nimport '../css/App.css';\r\n\r\nexport const GetOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [state, setState] = useState('pendiente');\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('order')\r\n      .where('estado', '==', state)\r\n      .orderBy('date', 'asc')\r\n      .onSnapshot((querySnapshot) => {\r\n        setOrders(querySnapshot.docs.map((snapOrder) => ({ id: snapOrder.id, ...snapOrder.data() })));\r\n      });\r\n  }, [state]);\r\n\r\n  const Ready = ({ id, date }) => {\r\n    let duration = new Date() - date.toDate();\r\n    const addZ = (n) => {\r\n      return (n < 10 ? '0' : '') + n;\r\n    };\r\n    const ms = duration % 1000;\r\n    duration = (duration - ms) / 1000;\r\n    const secs = duration % 60;\r\n    duration = (duration - secs) / 60;\r\n    const mins = duration % 60;\r\n    const hrs = (duration - mins) / 60;\r\n    const durationTime = `${addZ(hrs)}:${addZ(mins)}:${addZ(secs)}`;\r\n    firebase\r\n      .firestore()\r\n      .collection('order')\r\n      .doc(id)\r\n      .update({\r\n        estado: 'listo',\r\n        duration: durationTime,\r\n      });\r\n  };\r\n\r\n  const Delivered = ({ id }) => {\r\n    firebase\r\n      .firestore()\r\n      .collection('order')\r\n      .doc(id)\r\n      .update({\r\n        estado: 'entregado',\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"Nav\">\r\n        {/* <button className=\"Nav-btn\" id=\"\"><Link to=\"/\"> Home </Link></button> */}\r\n        <ul>\r\n          <li className=\"Nav-btn\" onClick={() => setState('pendiente')}>Pendientes</li>\r\n          <li className=\"Nav-btn\" onClick={() => setState('listo')}>Listos</li>\r\n          <li className=\"Nav-btn\" onClick={() => setState('entregado')}>Entregados</li>\r\n        </ul>\r\n      </nav>\r\n      <OrderStructure arr={orders} setOrderToReady={Ready} setOrderToDelivered={Delivered} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport { GetOrders } from '../components/GetOrders';\r\nimport { Header } from '../components/Header';\r\n\r\nexport const Chef = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <GetOrders />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Welcome } from './views/welcome';\r\nimport { Waiter } from './views/waiter';\r\nimport { Chef } from './views/chef';\r\nimport './css/App.css';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n        <Route path=\"/chef\">\r\n          <Chef />\r\n        </Route>\r\n        <Route path=\"/waiter\">\r\n          <Waiter />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Welcome />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n"],"sourceRoot":""}